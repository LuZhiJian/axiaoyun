@charset "utf-8";

// 正方形盒子
@mixin square($len) {
  width: $len;
  height: $len;
  line-height: $len;
  text-align: center;
}

// 圆形盒子
@mixin radius-box($len) {
  border-radius: 50%;

  @include square($len);
}

// 动画时间
@mixin transition($time) {
  transition: $time;
}

@mixin animation($animation) {
 -webkit-animation: $animation;
         animation: $animation;
}
@mixin animation-duration($duration) {
 -webkit-animation-duration: $duration;
         animation-duration: $duration;
}
@mixin animation-direction($direction) {
 -webkit-animation-direction: $direction;
         animation-direction: $direction;
}
@mixin animation-timing-function($animation-timing) {
 -webkit-animation-timing-function: $animation-timing;
         animation-timing-function: $animation-timing;
}
@mixin animation-fill-mode($fill-mode) {
 -webkit-animation-fill-mode: $fill-mode;
         animation-fill-mode: $fill-mode;
}
@mixin animation-name($name...) {
 -webkit-animation-name: $name;
         animation-name: $name;
}
@mixin animation-iteration-count($count) {
 -webkit-animation-iteration-count: $count;
         animation-iteration-count: $count;
}

@mixin animation($name , $duration , $timing , $count) {
    -webkit-animation-name: $name;
    -webkit-animation-duration: $duration;
    -webkit-animation-timing-function: $timing;
    -webkit-animation-iteration-count: $count;
    animation-name: $name;
    animation-duration: $duration;
    animation-timing-function: $timing;
    animation-iteration-count: $count;
}

// 上下浮动动画
@keyframes upToDown {
  0% {
    -webkit-transform: translate(0px, 0px);
    transform: translate(0px, 0px);
  }
  50% {
    -webkit-transform: translate(0px, -10px);
    transform: translate(0px, -10px);
  }
  100% {
    -webkit-transform: translate(0px, 0px);
    transform: translate(0px, 0px);
  }
}
